#+TITLE: RPGGame

* 概要

このアプリケーションはRyiSnowさんのプレイリスト
に習って GNUstep (Objective-C)で実装しているものです。

- プレイリスト :: [[https://www.youtube.com/playlist?list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq][How to Make a 2D Game in Java ]]

Resources/フォルダ内のすべての画像、音声はRyiSnowさんの公開されている素材を使用しています。

* RyiSnowの素晴らしいところ
- 自分の売り込み（顔出し）を抑えて説明に徹している。
- 誤りを全く隠さない。（視聴者の気づきを促す）
- 上級者がやりがちな最適化を行わず、地道にコーディングすることで初心者を置いてきぼりにしない。
- スキルがあるにも関わらず、あえて抑えている。
- コメント欄の指摘を受け入れ、初心者のエラー報告にもれなく応対している。
- 巷にあふれているセオリーよりも、自分の頭で考えて工夫する喜びを教えている。
  
とても真似できません。人格者です

* Javaとの主な違い

** 座標系
一般的なデバイス座標系は Yの増加方向が下を向いていますが、NSView が Postscript系の実世界に近い
Yの増加方向を上に定義しています。よって、ROW の数値表現が上下反転しています。

もともとはflip座標系をサポートしていたのですが、deprecated 扱いで使うのをやめました。

* アニメーションの違い
NSAnimationの使い方を理解していないため、NSTimerをつかています。

講習では精度の高いFPS実現のための工夫がなされていますが私は、この部分を妥協して手を抜きました。

* Apple Cocoaとの違い
GNUstep は API の水準が Apple にかなり近いとアナウンスしておりますが、これはFoundationのみです。
AppKit は実装されていない。または、ヘッダーに API があっても空実装だったり、TODO、FIXMEだらけで煮詰まっていません。
よって、Appleが大昔に、deprecated 扱いしているかなり古い API に頼っています。

Cocoaを実行する機材を持っていないのでApple向けの対応は行っていません。

* 注意事項
** Renaissance
GUIリソースはRenaissance を使って定義しています。

本家のRenaissance は長い間メンテナンスされておらず、正しく動作しません。よって使用する際は
クローンして修正を加えたリポジトリ
https://github.com/kenjirofukuda/libs-renaissance.git
をご使用ください。

gitに慣れていないため、アップストリームへのプルリクエストなどは出していません。

** コンパイラ
clangとlibobjc2が必要です。

Objective-C 2.0 の機能を一部採用しているので gobjc には対応していません。

メモリ管理は、基本的にGNUstepのマクロを積極的に使用して、ARC対応コンパイル時の修正を最小限にしています。

一部ブロックを使用しています。

** コーディングスタイル
現在はGNUスタイルを採用していますが、将来的には変更するかもしれません。

プロパティはまだ積極的に採用していません。従来の冗長なsetter getterを使用しています。

私は、ドット表記によるプロパティ表現が好きではありません。
構造体との違いを意識するためにもこの紛らわしい表記は避けています。（今のところ）

