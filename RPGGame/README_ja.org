#+TITLE: RPGGame

* 概要

このアプリケーションはRyiSnowさんのプレイリスト
に習って GNUstep (Objective-C)で実装しているものです。

GNUstep の入門段階であり、素材としてこの講習を模倣することで理解を深めていきたいと思っています。

- プレイリスト :: [[https://www.youtube.com/playlist?list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq][How to Make a 2D Game in Java ]]
- リソース :: [[https://drive.google.com/drive/folders/1OBRM8M3qCNAfJDCaldg62yFMiyFaKgYx][Blue Boy Adventure]]

Resources/フォルダ内のすべての画像、音声はRyiSnowさんの公開されている素材を使用しています。

* RyiSnowの素晴らしいところ
- 自分の売り込み（顔出し）を抑えて説明に徹している。
- 誤りを全く隠さない。（視聴者の気づきを促す）
- 上級者がやりがちな最適化を行わず、地道にコーディングすることで初心者を置いてきぼりにしない。
- スキルがあるにも関わらず、あえて抑えている。
- コメント欄の指摘を受け入れ、初心者のエラー報告にもれなく応対している。
- 巷にあふれているセオリーよりも、自分の頭で考えて工夫する喜びを教えている。
  
とても真似できません。人格者です

* Javaとの主な違い

** 座標系
一般的なデバイス座標系は Yの増加方向が下を向いていますが、NSView が Postscript系の実世界に近い
Yの増加方向を上に定義しています。よって、ROW の数値表現が上下反転しています。

もともとはflip座標系をサポートしていたのですが、deprecated 扱いで使うのをやめました。

* アニメーションの違い
NSAnimationの使い方を理解していないため、NSTimerをつかています。

講習では精度の高いFPS実現のための工夫がなされていますが私は、この部分を妥協して手を抜きました。

* Apple Cocoaとの違い
GNUstep は API の水準が Apple にかなり近いとアナウンスしておりますが、これはFoundationのみです。
AppKit は実装されていない。または、ヘッダーに API があっても空実装だったり、TODO、FIXMEだらけで煮詰まっていません。
よって、Appleが大昔に、deprecated 扱いしているかなり古い API に頼っています。

Cocoaを実行する機材を持っていないのでApple向けの対応は行っていません。

* 注意事項
** Renaissance
GUIリソースはRenaissance を使って定義しています。

本家のRenaissance は長い間メンテナンスされておらず、正しく動作しません。よって使用する際は
クローンして修正を加えたリポジトリ
https://github.com/kenjirofukuda/libs-renaissance.git
をご使用ください。

gitに慣れていないため、アップストリームへのプルリクエストなどは出していません。

** コンパイラ
clangとlibobjc2が必要です。

Objective-C 2.0 の機能を一部採用しているので gobjc には対応していません。

メモリ管理は、基本的にGNUstepのマクロを積極的に使用して、ARC対応コンパイル時の修正を最小限にしています。

一部ブロックを使用しています。

** コーディングスタイル
現在はGNUスタイルを採用していますが、将来的には変更するかもしれません。

プロパティはまだ積極的に採用していません。従来の冗長なsetter getterを使用しています。

私は、ドット表記によるプロパティ表現が好きではありません。
構造体との違いを意識するためにもこの紛らわしい表記は避けています。（今のところ）

* 進捗状況

- [X] #1 [[https://www.youtube.com/watch?v=om59cwR7psI&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=1&t=14s&pp=iAQB][The MechaniThe Mechanism of 2D Games]]
- [X] #2 [[https://www.youtube.com/watch?v=VpH33Uw-_0E&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=2&t=1674s&pp=iAQB][Game Loop and Key Input]]
- [X] #3 [[https://www.youtube.com/watch?v=wT9uNGzMEM4&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=3&t=2s&pp=iAQB][Sprites and Animation]]
- [X] #4 [[https://www.youtube.com/watch?v=ugzxCcpoSdE&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=5&t=1357s&pp=iAQB][Drawing Tiles]]
- [X] #5 [[https://www.youtube.com/watch?v=Ny_YHoTYcxo&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=6&t=1271s&pp=iAQB][World and Camera]]
- [X] #6 [[https://www.youtube.com/watch?v=oPzPpUcDiYY&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=7&t=734s&pp=iAQB][Collision Detection]]
- [X] #7 [[https://www.youtube.com/watch?v=xYtXz34IJdY&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=8&t=14s&pp=iAQB][Object Placement]]
- [X] #8 [[https://www.youtube.com/watch?v=srvDSypsJL0&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=9&t=7s&pp=iAQB][Object Interaction]]
- [X] #9 [[https://www.youtube.com/watch?v=nUHh_J2Acy8&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=10&t=7s&pp=iAQB][Sound]]
- [X] #10 [[https://www.youtube.com/watch?v=0yD5iT8ObCs&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=11&t=286s&pp=iAQB][The First Game Done (UI)]]
- [ ] #11 [[https://www.youtube.com/watch?v=fZLfJSXs0BU&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=13&t=83s&pp=iAQB][Improving Rendering Performance]]
- [X] #12 [[https://www.youtube.com/watch?v=GoZbZC81u7Y&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=14&t=25s&pp=iAQB][New Pixel Art]]
- [ ] #13 [[https://www.youtube.com/watch?v=WcYIEJGIEdQ&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=15&pp=iAQB][Game State]]
- [ ] #14 [[https://www.youtube.com/watch?v=yomRN8izknM&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=16][NPC]]

...
- [ ] #56 [[https://www.youtube.com/watch?v=9czCgoBstn8&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=62&pp=iAQB][Cutscene]]
- [ ] #Final [[https://www.youtube.com/watch?v=9jjWFjGAjRM&list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq&index=63&pp=iAQB][Ending]]


 - How to Make a 2D Game in Java #12
