Object subclass: #GdsHatch	instanceVariableNames: 'hName angle linesPerScreen'	classVariableNames: ''	poolDictionaries: ''	category: 'GdsFeel-Developer-Model'!!GdsHatch methodsFor: 'accessing' stamp: 'kf 5/11/2009 16:22'!angle	^angle! !!GdsHatch methodsFor: 'accessing' stamp: 'kf 5/11/2009 13:50'!letter	^self name first ! !!GdsHatch methodsFor: 'accessing' stamp: 'kf 5/11/2009 16:23'!linesPerScreen	linesPerScreen ifNil: [linesPerScreen := self defaultLinesPerScreen.].	 ^linesPerScreen! !!GdsHatch methodsFor: 'accessing' stamp: 'kf 5/11/2009 16:22'!name	^hName! !!GdsHatch methodsFor: 'defaults' stamp: 'kf 5/11/2009 13:55'!defaultLinesPerScreen	^127.	! !!GdsHatch methodsFor: 'testing' stamp: 'kf 5/13/2009 09:22'!isGdsReserved	^#('A' 'B' 'C' 'D') includes: self name .! !!GdsHatch methodsFor: 'drawing-support' stamp: 'kf 5/11/2009 23:07'!lineSegmentsOf: aBoundsRectangle	^self lineSegmentsOf: aBoundsRectangle  normalizedPoint: (Point r: 1 degrees: self angle). ! !!GdsHatch methodsFor: 'drawing-support' stamp: 'kf 5/11/2009 23:08'!lineSegmentsOf: aBoundsRectangle from: pt1 to: pt2	^self lineSegmentsOf: aBoundsRectangle  normalizedPoint: (pt2 - pt1) normalized. ! !!GdsHatch methodsFor: 'drawing-support' stamp: 'kf 5/11/2009 23:09'!lineSegmentsOf: aBoundsRectangle normalizedPoint: aNormalizedPoint	| cp length atPoint1 atPoint2 step offsetPt screenSize sidesCount segs destSize |	segs := OrderedCollection new.	cp := aBoundsRectangle center.	screenSize := aBoundsRectangle extent r.	length := screenSize // 2.	atPoint1 := (aNormalizedPoint * length) + cp.	atPoint2 := (aNormalizedPoint negated * length) + cp.	step := (screenSize // self linesPerScreen) + 1.	offsetPt := (aNormalizedPoint normal  * step).	sidesCount := self linesPerScreen // 2.	(sidesCount negated to: sidesCount) do:[:index |		destSize := (offsetPt * index).		segs add: { (atPoint1 + destSize) . (atPoint2 + destSize)}.	].	^segs asArray.! !!GdsHatch methodsFor: 'printing' stamp: 'kf 5/11/2009 23:31'!printOn: aStream	super printOn: aStream.	aStream nextPut: $(.		aStream nextPutAll: self name.		aStream nextPut: $, .		aStream nextPutAll: (self angle asString, ' DEG').		self linesPerScreen = self defaultLinesPerScreen 			ifFalse: [				aStream nextPut: $, .				aStream nextPutAll: (self linesPerScreen asString)].	aStream nextPut: $).		! !!GdsHatch methodsFor: 'initialize-release' stamp: 'kf 5/11/2009 16:31'!setName: aString angle: aFloat	self setName: aString angle: aFloat linesPerScreen: self defaultLinesPerScreen.		! !!GdsHatch methodsFor: 'initialize-release' stamp: 'kf 5/11/2009 16:31'!setName: aString angle: aFloat linesPerScreen: anInteger	hName := aString.	angle := aFloat.	linesPerScreen := anInteger.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsHatch class	instanceVariableNames: ''!Object subclass: #GdsHatchSets	instanceVariableNames: 'hatchMap'	classVariableNames: ''	poolDictionaries: ''	category: 'GdsFeel-Developer-Model'!!GdsHatchSets methodsFor: 'as yet unclassified' stamp: 'kf 5/11/2009 23:22'!initialize	super initialize.	hatchMap := Dictionary new.	 self class specRecord do: [:toliplet |		hatchMap at: toliplet first put: (GdsHatch new setName: toliplet first angle: toliplet second linesPerScreen: toliplet third).		].	! !!GdsHatchSets methodsFor: 'as yet unclassified' stamp: 'kf 5/11/2009 23:25'!printOn: aStream	super printOn: aStream.	aStream nextPut: $(.	hatchMap keys do: [:key | 		aStream nextPutAll: key.		aStream nextPut: $, ].	aStream skip: -1.	aStream nextPut: $).	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsHatchSets class	instanceVariableNames: ''!!GdsHatchSets class methodsFor: 'as yet unclassified' stamp: 'kf 10/9/2009 17:11'!specRecord	^{	{'A'  . 0.0 . 127}.	{'B'  . 45.0 . 127}.	{'C'  . 90.0 . 127}.	{'D'  . 135.0 . 127}	}.! !Object subclass: #GdsLineStyle	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsFeel-Developer-Model'!!GdsLineStyle methodsFor: 'as yet unclassified' stamp: 'kf 5/11/2009 13:45'!letter	self symbol = #solid ifTrue: [^$-].	self symbol = #brokn ifTrue: [^$!!].	self symbol = #dashed ifTrue: [^$|].	self symbol = #doted ifTrue: [^$:].	^$E "error symbol"	! !!GdsLineStyle methodsFor: 'as yet unclassified' stamp: 'kf 5/11/2009 13:40'!symbol	^#solid.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsLineStyle class	instanceVariableNames: ''!