GdsScalar subclass: #GdsDglType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsDglType commentStamp: 'kf 11/10/2008 22:35' prior: 0!A GdsDglType is DATAGENERAL DATA TYPES.Instance Variables!!GdsDglType methodsFor: 'convert' stamp: 'kf 4/25/2009 14:56'!asSmalltalkValue	^self stringValue asNumber! !!GdsDglType methodsFor: 'printing' stamp: 'kf 11/11/2008 20:42'!displayName	^self class displayName! !!GdsDglType methodsFor: 'as yet unclassified' stamp: 'kf 4/21/2009 21:42'!maxValue	self class maxValue.! !!GdsDglType methodsFor: 'as yet unclassified' stamp: 'kf 4/21/2009 21:42'!minValue	self class minValue.! !!GdsDglType methodsFor: 'as yet unclassified' stamp: 'kf 4/23/2009 23:38'!storageCost	^self class storageCost! !!GdsDglType methodsFor: 'accessing' stamp: 'kf 4/24/2009 13:45'!typeString	^self class typeString.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsDglType class	instanceVariableNames: ''!!GdsDglType class methodsFor: 'testing' stamp: 'kf 4/21/2009 22:38'!acceptableExpression: aString	|num|	(aString matchesRegex: self acceptRegexPattern)		ifFalse: [^false].	num := aString asNumber.	num ifNil: [^false].	^(num >= self minValue) and: [num <= self maxValue]! !!GdsDglType class methodsFor: 'private' stamp: 'kf 4/22/2009 16:08'!bestClassOfStatement: aString	| classes |	classes := (self handledClassesOfStatement: aString) asArray.	classes ifEmpty: [^nil].	classes size = 1 ifTrue: [^classes last].	^(classes sort: [:a :b | a storageCost < b storageCost]) first.! !!GdsDglType class methodsFor: 'private' stamp: 'kf 4/26/2009 12:00'!handledClassesOfStatement: aString	^self instanciateClasses select: [:clazz |		clazz acceptableExpression: aString]! !!GdsDglType class methodsFor: 'private' stamp: 'kf 4/27/2009 21:22'!instanciateClasses 	^{ GdsBoolean . GdsCharacter . GdsInteger . GdsInteger2. GdsReal}.! !!GdsDglType class methodsFor: 'printing' stamp: 'kf 11/11/2008 20:40'!displayName	^(self name asString allButFirst: 3) asUppercase.! !!GdsDglType class methodsFor: 'accessing' stamp: 'kf 4/26/2009 12:19'!maxValue	self subclassResponsibility.! !!GdsDglType class methodsFor: 'accessing' stamp: 'kf 4/26/2009 12:19'!minValue	self subclassResponsibility.! !!GdsDglType class methodsFor: 'accessing' stamp: 'kf 4/27/2009 14:56'!precisionRank	^-1! !!GdsDglType class methodsFor: 'accessing' stamp: 'kf 5/19/2009 14:13'!shape	^#() copy! !!GdsDglType class methodsFor: 'accessing' stamp: 'kf 4/26/2009 12:03'!storageCost	^ 0! !!GdsDglType class methodsFor: 'accessing' stamp: 'kf 4/24/2009 13:45'!typeString	^self name asString asUppercase allButFirst: 3.! !GdsDglType subclass: #GdsCharacter	instanceVariableNames: ''	classVariableNames: 'KeyToOctalMap'	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsCharacter commentStamp: 'kf 4/21/2009 23:34' prior: 0!A GdsCharacter is Character on GDSII.Character literal expression is not GPL."A" is a shpe 1 vector.real character represents "A"[1].special characters are:readable notation           octal notation"<NUL>"          equivarent "<0>""<BEL>"          equivarent "<7>""<TAB>"          equivarent "<11>""<LF>"           equivarent "<12>""<FF>"           equivarent "<14>""<CR>"           equivarent "<15>""<NL>"           equivarent "<15>""<ESC>"          equivarent "<33>""<BROFF>"        equivarent "<36>""<BRON>"         equivarent "<37>""<QT>"           equivarent "<42>"                            "<74>"   less than                            "<75>"   grator than"<DEL>"          equivarent "<177>" !!GdsCharacter methodsFor: 'as yet unclassified' stamp: 'kf 9/15/2012 19:35'!asSmalltalkCharacter	^Character value: self asciiValue! !!GdsCharacter methodsFor: 'as yet unclassified' stamp: 'kf 9/15/2012 19:35'!asciiValue	^self asSmalltalkValue asInteger.! !!GdsCharacter methodsFor: 'as yet unclassified' stamp: 'kf 4/26/2009 15:50'!gplString	^(Character value: (self asSmalltalkValue asInteger)) asString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsCharacter class	instanceVariableNames: ''!!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 4/21/2009 22:12'!acceptRegexPattern	^'[0-9]+'! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 9/15/2012 20:25'!asciiValueInsideCharMarkLiteral: aCharMarkLiteral	| map octString v|	self assert: aCharMarkLiteral notEmpty.	map := self specialLiteralToOctalExprMap .	octString := map at: aCharMarkLiteral asUppercase  ifAbsent:[aCharMarkLiteral].	octString isAllOctal		ifFalse: [^self syntaxError: #octalExprError].	v := Integer readFrom: octString readStream radix: 8.	((0 to: 255) includes: v) ifFalse:[^self syntaxError:#characterRangeError].	^v! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:42'!maxValue	^255! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:42'!minValue	^0! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 11/10/2008 16:40'!mode	^4! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 9/15/2012 20:06'!specialLiteralToOctalExprMap	KeyToOctalMap ifNil: [KeyToOctalMap := self lookuplToOctalExprMap].	^KeyToOctalMap.! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 11/11/2008 17:28'!storageCost	^ 1! !!GdsCharacter class methodsFor: 'accessing' stamp: 'kf 4/27/2009 21:24'!typeString	^'CHAR'! !!GdsCharacter class methodsFor: 'testing' stamp: 'kf 4/22/2009 16:02'!acceptableExpression: aString	^false.! !!GdsCharacter class methodsFor: 'testing' stamp: 'kf 5/23/2009 14:20'!isAcceptableSmalltalkObject: anObject	^anObject isCharacter and: [anObject isOctetCharacter]! !!GdsCharacter class methodsFor: 'instance creation' stamp: 'kf 4/27/2009 17:04'!fromAsciiValue: asciiValue	^self new stringValue: asciiValue! !!GdsCharacter class methodsFor: 'instance creation' stamp: 'kf 4/27/2009 17:07'!fromLiteral: aString	^self error: 'GdsCharacter can''t instanciate by #fromLiteral:'! !!GdsCharacter class methodsFor: 'instance creation' stamp: 'kf 5/23/2009 15:38'!fromSmalltalk: aObject	^self fromAsciiValue: aObject asciiValue ! !!GdsCharacter class methodsFor: 'instance creation' stamp: 'kf 9/15/2012 20:05'!initialize	"GdsCharacter initialize."	super initialize.	KeyToOctalMap := self lookuplToOctalExprMap. ! !!GdsCharacter class methodsFor: 'private' stamp: 'kf 9/15/2012 20:05'!lookuplToOctalExprMap	"return ocatal expr String"		^Dictionary newFrom: {	'NUL' -> '0' .	'BEL' -> '7' .	'TAB' -> '11' .	'LF' -> '12' .	'FF' -> '14' .	'CR' -> '15' .	'NL' -> '15' .	'ESC' -> '33' .	'BROFF' -> '36' .	'BRON' -> '37' .	'QT' -> '42' .	'DEL' -> '177' .	}.! !GdsDglType subclass: #GdsNumber	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsNumber class	instanceVariableNames: ''!!GdsNumber class methodsFor: 'as yet unclassified' stamp: 'kf 5/23/2009 15:22'!fromSmalltalk: anObject	| clazz |	clazz := self allSubclasses detect: [:each  | each isAcceptableSmalltalkObject: anObject] ifNone: [^nil].	clazz ifNil: [^self error: 'CANNT INSTANCE CREATION' ].	^clazz fromSmalltalk: anObject.! !!GdsNumber class methodsFor: 'as yet unclassified' stamp: 'kf 5/23/2009 13:58'!isAcceptableSmalltalkObject: anObject	^self allSubclasses anySatisfy: [:clazz | clazz isAcceptableSmalltalkObject: anObject].! !GdsNumber subclass: #GdsBoolean	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsBoolean commentStamp: 'kf 4/21/2009 23:08' prior: 0!A GdsBoolean is Boolean value on GDSII.storage cost: 1byte1 -> TRUE0 -> FLASETRUE -> TRUEFALSE -> FALSEInstance Variables!!GdsBoolean methodsFor: 'convert' stamp: 'kf 4/25/2009 14:56'!asSmalltalkValue	self stringValue = 'TRUE'		ifTrue: [^1].	self stringValue = 'FALSE'		ifTrue: [^0].	^super asSmalltalkValue 			! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsBoolean class	instanceVariableNames: ''!!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 4/21/2009 22:12'!acceptRegexPattern	^'[01]|TRUE|FALSE'! !!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:43'!maxValue	^1! !!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:43'!minValue	^0! !!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 11/10/2008 16:41'!mode	^1! !!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 4/27/2009 14:57'!precisionRank	^1! !!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 11/11/2008 17:28'!storageCost	^ 1! !!GdsBoolean class methodsFor: 'accessing' stamp: 'kf 5/19/2009 14:24'!typeString	^'LOGICAL'! !!GdsBoolean class methodsFor: 'instance creation' stamp: 'kf 5/23/2009 14:40'!fromSmalltalk: aObject	aObject = true ifTrue: [ ^self new stringValue: '1'].	aObject = false ifTrue: [ ^self new stringValue: '0'].	^self new stringValue: aObject asString.! !!GdsBoolean class methodsFor: 'test' stamp: 'kf 5/23/2009 14:39'!isAcceptableSmalltalkObject: anObject	(anObject isKindOf: Boolean) ifTrue: [^true].	^anObject isInteger and: [anObject  = 1 or: [anObject = 0]].! !GdsNumber subclass: #GdsFloating	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsFloating commentStamp: 'kf 4/25/2009 15:28' prior: 0!A GdsFloating is abstract class for Real number on GDSII.0		represents: 0.1.0		represents: 1.0.1		represents: .11.0e-6	represents: 1.0E-6  disallow small capital 'e'	!!GdsFloating methodsFor: 'convert' stamp: 'kf 4/27/2009 16:03'!asSmalltalkValue	^self stringValue asLowercase asNumber asFloat.! !!GdsFloating methodsFor: 'convert' stamp: 'kf 9/16/2009 16:13'!gplString	| expr |	expr := super gplString.	(expr endsWith: '.0')		ifTrue: [^expr allButLast: 1].	(expr beginsWith: '-0.')		ifTrue: [^'-.', (expr allButFirst: 3)].	(expr beginsWith: '0.')		ifTrue: [^'.', (expr allButFirst: 2)].		^expr asUppercase! !!GdsFloating methodsFor: 'convert' stamp: 'kf 5/20/2009 17:22'!gplStringLeftWidth: aLeftWidth rightWidth: aRightWidth	| gs items |	gs := self gplString.	items := { gs copyFrom: 1 to: (gs indexOf: $.) - 1 . gs copyFrom: (gs indexOf: $.) + 1 to: (gs size) }.	^String streamContents: [:s |		s nextPutAll: (items first padded: #left to: aLeftWidth with: Character space).		s nextPut: $. .		s nextPutAll: (items second padded: #right to: aRightWidth with: Character space)].	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsFloating class	instanceVariableNames: ''!!GdsFloating class methodsFor: 'accessing' stamp: 'kf 4/27/2009 16:18'!acceptRegexPattern	"'(\+|-)?([0-9]+\.?[0-9]*|\.[0-9]+)([eE](\+|-)?[0-9]+)?'" "stnard"	"GPL disallow lowercase e	OK: 1E6	OK  1E-6	NG  1E+6  -> invalid token #('1E' '+' '6')	"	^'(-)?([0-9]+\.?[0-9]*|\.[0-9]+)([E](-)?[0-9]+)?'! !!GdsFloating class methodsFor: 'accessing' stamp: 'kf 4/26/2009 00:16'!maxValue	^7.24e75! !!GdsFloating class methodsFor: 'accessing' stamp: 'kf 4/26/2009 00:16'!minValue	^-7.24e75! !!GdsFloating class methodsFor: 'accessing' stamp: 'kf 4/24/2009 00:27'!mode	^3! !!GdsFloating class methodsFor: 'instance creation' stamp: 'kf 5/23/2009 15:29'!fromSmalltalk: aObject	^GdsReal new stringValue: aObject asString.! !!GdsFloating class methodsFor: 'test' stamp: 'kf 5/23/2009 14:06'!isAcceptableSmalltalkObject: anObject	^anObject isNumber and: [anObject isKindOf: Float].! !GdsNumber subclass: #GdsIntegral	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsIntegral class	instanceVariableNames: ''!!GdsIntegral class methodsFor: 'as yet unclassified' stamp: 'kf 5/23/2009 15:30'!fromSmalltalk: aObject	^GdsInteger new stringValue: aObject asString.! !!GdsIntegral class methodsFor: 'as yet unclassified' stamp: 'kf 5/23/2009 14:08'!isAcceptableSmalltalkObject: anObject	^anObject isInteger.! !!GdsIntegral class methodsFor: 'accessing' stamp: 'kf 5/23/2009 14:33'!acceptRegexPattern	^'[-]?[0-9]+'! !GdsIntegral subclass: #GdsInteger	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsInteger commentStamp: 'kf 4/26/2009 16:26' prior: 0!A GdsInteger is Integer number on GDSII.storage cost: 2byte(1word) 16bit machine2-byte integer:SMMMMMMM MMMMMMM!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsInteger class	instanceVariableNames: ''!!GdsInteger class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:41'!maxValue	"(2 raisedTo: (16 - 1)) - 1"	^32767 ! !!GdsInteger class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:41'!minValue	"(2 raisedTo: (16 - 1)) negated"	^-32768 	! !!GdsInteger class methodsFor: 'accessing' stamp: 'kf 11/10/2008 16:41'!mode	^2! !!GdsInteger class methodsFor: 'accessing' stamp: 'kf 4/27/2009 14:58'!precisionRank	^2! !!GdsInteger class methodsFor: 'accessing' stamp: 'kf 11/11/2008 17:28'!storageCost	^ 2! !GdsIntegral subclass: #GdsInteger2	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsInteger2 commentStamp: 'kf 4/26/2009 16:25' prior: 0!A GdsInteger2 is Integer number on GDSII.storage cost: 4byte(2word) 16bit machine4-byte integer:SMMMMMMM MMMMMMMM MMMMMMMM MMMMMMMM!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsInteger2 class	instanceVariableNames: ''!!GdsInteger2 class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:40'!maxValue	"(2 raisedTo: (32 - 1)) - 1"	^2147483647 ! !!GdsInteger2 class methodsFor: 'accessing' stamp: 'kf 4/21/2009 21:40'!minValue	"(2 raisedTo: (32 - 1)) negated"	^-2147483648	! !!GdsInteger2 class methodsFor: 'accessing' stamp: 'kf 11/10/2008 16:43'!mode	^7! !!GdsInteger2 class methodsFor: 'accessing' stamp: 'kf 11/11/2008 17:28'!storageCost	^ 4! !GdsFloating subclass: #GdsReal	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsReal commentStamp: 'kf 4/26/2009 16:25' prior: 0!A GdsReal is Real number on GDSII.storage cost: 8byte(4word) 16bit machine8-byte real:SEEEEEEE MMMMMMMM MMMMMMMM MMMMMMMM MMMMMMMM MMMMMMMM MMMMMMMM MMMMMMMM!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsReal class	instanceVariableNames: ''!!GdsReal class methodsFor: 'accessing' stamp: 'kf 4/27/2009 14:58'!precisionRank	^3! !!GdsReal class methodsFor: 'accessing' stamp: 'kf 4/26/2009 16:08'!storageCost	^ 8! !!GdsReal class methodsFor: 'accessing' stamp: 'kf 4/24/2009 13:50'!typeString	^'REAL'! !GdsFloating subclass: #GdsReal2	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'GdsCompiler-DGL'!!GdsReal2 commentStamp: 'kf 4/26/2009 16:24' prior: 0!A GdsReal2 is Real number on GDSII.storage cost: 4byte(2word) 16bit machine4-byte real:SEEEEEEE MMMMMMMM MMMMMMMM MMMMMMMM!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GdsReal2 class	instanceVariableNames: ''!!GdsReal2 class methodsFor: 'testing' stamp: 'kf 4/22/2009 15:52'!acceptableExpression: aString	"TODO: implements minValue maxValue"	|num|	(aString matchesRegex: self acceptRegexPattern)		ifFalse: [^false].	num := aString asNumber.	num ifNil: [^false].	^true.! !!GdsReal2 class methodsFor: 'accessing' stamp: 'kf 11/10/2008 16:43'!mode	^8! !!GdsReal2 class methodsFor: 'accessing' stamp: 'kf 4/26/2009 16:09'!storageCost	^4! !!GdsReal2 class methodsFor: 'accessing' stamp: 'kf 4/24/2009 13:50'!typeString	^'REAL2'! !GdsCharacter initialize!